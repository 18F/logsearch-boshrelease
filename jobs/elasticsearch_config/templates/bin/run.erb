#!/bin/bash

set -e

post() {
  url=$1
  data=$2

  HTTP_CODE=$(echo "$data" | curl -s -w '%{http_code}' -o /tmp/output.txt -X PUT --data-binary @- "${url}")

  if [ "$HTTP_CODE" -le "300" ]; then
    cat /tmp/output.txt
  else
    cat /tmp/output.txt > /dev/stderr
    exit $HTTP_CODE
  fi
}


#
# wait for elasticsearch availability
#

READY=false

while [ "false" == "$READY" ] ; do
    STATUS=$(curl -s http://<%= p("elasticsearch_config.elasticsearch.host") %>:<%= p("elasticsearch_config.elasticsearch.port") %>'/_cat/health?h=status' | tr -d '[:space:]')

    if [ "green" == "$STATUS" ] || [ "yellow" == "$STATUS" ] ; then
        READY=true
    else
        sleep 1
    fi
done


#
# templates
#

<% p('elasticsearch_config.templates').each do | plugin | ckey, cvalue = plugin.first %>
  URL="http://<%= p("elasticsearch_config.elasticsearch.host") %>:<%= p("elasticsearch_config.elasticsearch.port") %>/_template/<%= ckey %>"

  <% if nil == cvalue %>
  curl -X DELETE "${URL}"
  <% else %>
  HTTP_BODY=$(cat <<EOF
  <%= cvalue %>
EOF
)
  
  post "$URL" "$HTTP_BODY"
  <% end %>
<% end %>


#
# documents
#

<% p('elasticsearch_config.docs').each do | plugin | ckey, cvalue = plugin.first %>
  URL="http://<%= p("elasticsearch_config.elasticsearch.host") %>:<%= p("elasticsearch_config.elasticsearch.port") %>/<%= ckey %>"

 <% if nil == cvalue %>
      curl -X DELETE "${URL}"
 <% else %>
      HTTP_BODY=$(cat <<EOF
      <%= cvalue %>
EOF
)
      post "$URL" "$HTTP_BODY"
  <% end %>

<% end %>

#
# bulk files
#

URL="http://<%= p("elasticsearch_config.elasticsearch.host") %>:<%= p("elasticsearch_config.elasticsearch.port") %>/_bulk"
<% p('elasticsearch_config.bulk_data_files').each do |path| %>
  HTTP_BODY=$(cat <%= path %>)
  post "$URL" "$HTTP_BODY"
<% end %>
