#!/bin/bash

#
# This script will re-enable shard allocations if the drain script was used.
#

set -e
set -u

<% if !p('elasticsearch.drain') %>
#
# The `elasticsearch.drain` property is disabled in the deployment.
#

exit 0

<% elsif !p('elasticsearch.node.allow_data') %>
#
# This node does not contain data, so we can skip all these tasks.
#

exit 0

<% end %>

#
# we need to wait until we can talk to elasticsearch
#
while ! nc -zw 8 localhost 9200 2>&1 > /dev/null ; do sleep 5 ; done

#
# we need to wait until the .bosh index is certainly available
#
READY=false
while [ "false" == "$READY" ] ; do
    STATUS=$(curl -s 'localhost:9200/_cat/health?h=status' | tr -d '[:space:]')

    if [ "green" == "$STATUS" ] || [ "yellow" == "$STATUS" ] ; then
        READY=true
    else
        sleep 1
    fi
done

if [ '{"drained":1}' == $(curl -s 'localhost:9200/.bosh/drain/<%= name %>--<%= index %>/_source') ] ; then
    #
    # looks like the drain script was used, so reverse those settings
    #

    # put allocations back to normal
    curl -s \
        -X PUT \
        -d '{"transient":{"cluster.routing.allocation.enable":"all"}}' \
        'localhost:9200/_cluster/settings' \
        > /dev/null

    # avoid us doing this next time
    curl -s \
        -X DELETE \
        'localhost:9200/.bosh/drain/<%= name %>--<%= index %>' \
        > /dev/null
fi
