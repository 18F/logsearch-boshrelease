#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/log_parser/helpers/ctl_setup.sh 'log_parser'

export PORT=${PORT:-5000}
export LANG=en_US.UTF-8
<% if 'auto' == p('logstash_parser.workers') %>
# 1 logstash worker / CPU core
export LOGSTASH_WORKERS=`grep -c ^processor /proc/cpuinfo`
<% else %>
export LOGSTASH_WORKERS=<%= p('logstash_parser.workers') %>
<% end %>

#Copy all files from source folder tree and flatten into dest folder
function copy_and_flatten  {
    find $1 -type f -exec cp {} $2 \;
}  

case $1 in

  start)
    pid_guard $PIDFILE $JOB_NAME

    # store this processes pid in $PIDFILE, since the exec below doesn't daemonize
    echo $$ > $PIDFILE

    # construct a complete config file from all the fragments
    cat ${JOB_DIR}/config/input_redis_and_output_elasticsearch.conf > ${JOB_DIR}/config/logstash.conf
    cat ${JOB_DIR}/config/filters_pre.conf >> ${JOB_DIR}/config/logstash.conf

    mkdir -p ${JOB_DIR}/config/raw ${JOB_DIR}/config/composite
    rm -f ${JOB_DIR}/config/composite/*

    pushd ${JOB_DIR}/config/composite > /dev/null

    <% filters = Array(p('logstash_parser.filters', [])) %>
    <% filters.each do | v | %>
      <% if v =~ /^file:\/\/(.+)$/ %>
        find <%= $1 %> -name '*.conf' -exec cp {} . \;
      <% else %>
        <% if v =~ /\.tar\.gz$/ or v =~ /\.tgz$/ %>
          /usr/bin/wget -qO- "<%= v %>" | /bin/tar -xz 
        <% elsif v =~ /\.tar$/ %>
          /usr/bin/wget -qO- "<%= v %>" | /bin/tar -x 
        <% elsif v =~ /\.zip$/ %>
          /usr/bin/wget "<%= v %>" && /usr/bin/unzip -d .ziptmp `basename "<%= v %>"` && /bin/mv .ziptmp/*/* ./ && /bin/rm -fr `basename "<%= v %>"` .ziptmp
        <% end %>
      <% end %>
    <% end %>

    popd > /dev/null

    # find all filters
    FILTERS=$(find ${JOB_DIR}/config/composite -follow -type f -name '*.conf' | awk -vFS=/ -vOFS=, '{ print $NF,$0 }' | sort -n | cut -d "," -f 2 | xargs)
    cat ${FILTERS} >> ${JOB_DIR}/config/logstash.conf

    cat ${JOB_DIR}/config/filters_post.conf >> ${JOB_DIR}/config/logstash.conf

    exec /var/vcap/packages/logstash/logstash/bin/logstash agent \
         -f ${JOB_DIR}/config/logstash.conf -w ${LOGSTASH_WORKERS} \
         >>$LOG_DIR/$JOB_NAME.stdout.log \
         2>>$LOG_DIR/$JOB_NAME.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: ingestor_syslog_ctl {start|stop}"

    ;;

esac
exit 0
